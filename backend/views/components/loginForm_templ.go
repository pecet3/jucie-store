// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func LoginForm() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<form id=\"loginForm\" class=\"col-span-2 m-auto max-w-lg flex flex-col items-center\"><div class=\"mb-4\"><label for=\"username\" class=\"block mb-2 text-sm font-bold text-gray-700\">Username</label> <input type=\"text\" id=\"username\" name=\"username\" class=\"w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\" required></div><div class=\"mb-6\"><label for=\"password\" class=\"block mb-2 text-sm font-bold text-gray-700\">Password</label> <input type=\"password\" id=\"password\" name=\"password\" class=\"w-full px-3 py-2 leading-tight text-gray-700 border rounded shadow appearance-none focus:outline-none focus:shadow-outline\" required></div><div class=\"flex items-center justify-between\"><input value=\"Login\" type=\"submit\" class=\"px-4 py-2 font-bold text-white bg-blue-500 rounded hover:bg-blue-700 focus:outline-none focus:shadow-outline\"></div></form><script>\ndocument.getElementById('loginForm').addEventListener('submit', function(e) {\n    e.preventDefault();\n\n    const formData = new FormData(this)\n\n    fetch('/auth/login-admin', {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error('Login failed');\n        }\n        return response.json();\n    })\n    .then(data => {\n        console.log('Login successful:', data);\n        // Handle successful login here (e.g., redirect, update UI)\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        // Handle login error here (e.g., show error message)\n    });\n});\n</script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
